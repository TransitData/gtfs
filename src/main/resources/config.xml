<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
    http://www.springframework.org/schema/batch/spring-batch.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd

     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="transitdata.io.domain"/>

    <import resource="agency-config.xml"/>
    <import resource="stop-config.xml"/>
    <import resource="calendar-config.xml"/>

    <!--Load our properties file-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="batch.properties"/>
    </bean>

    <bean class="java.net.URI" id="dbUrl">
        <constructor-arg value="${DATABASE_URL}"/>
    </bean>

    <bean id="headerHandler" class="transitdata.io.batch.HeaderHandler"/>

    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="driverClass" value="org.postgresql.Driver"/>
        <property name="jdbcUrl"
                  value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() +
                  '?sslfactory=org.postgresql.ssl.NonValidatingFactory&amp;ssl=true'}"/>
        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
        <property name="connectionTestStatement" value="SELECT 1"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          lazy-init="true">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="databaseType" value="POSTGRES"/>
    </bean>

    <bean id="jobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
    </bean>

    <batch:job id="gtfsJob" restartable="false" job-repository="jobRepository">
        <batch:step id="stopStep" next="agencyStep">
            <tasklet>
                <chunk reader="stopItemReader"
                       writer="stopItemWriter"
                       commit-interval="10000"/>
                <!--TODO Set appropriate commit-interval value-->
            </tasklet>
        </batch:step>
        <batch:step id="agencyStep" next="calendarStep">
            <tasklet>
                <chunk reader="agencyItemReader"
                       writer="agencyItemWriter"
                       commit-interval="10000"/>
                <!--TODO Set appropriate commit-interval value-->
            </tasklet>
        </batch:step>
        <batch:step id="calendarStep" next="routeStep">
            <tasklet>
                <chunk reader="calendarItemReader"
                       writer="calendarItemWriter"
                       commit-interval="10000"/>
                <!--TODO Set appropriate commit-interval value-->
            </tasklet>
        </batch:step>
        <batch:step id="routeStep">
            <tasklet>
                <chunk reader="routeItemReader"
                       writer="routeItemWriter"
                       commit-interval="10000"/>
                <!--TODO Set appropriate commit-interval value-->
            </tasklet>
        </batch:step>
    </batch:job>

</beans>
